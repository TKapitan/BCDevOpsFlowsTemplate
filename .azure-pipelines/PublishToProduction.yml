pr: none
trigger: 
  branches:
    include:
    - main
    - master

resources:
  repositories:
  - repository: BCDevOpsFlows
    type: github
    name: # Specify the link to your BCDevOpsFlows fork (format YourGitHubUsername/ForkName)
    endpoint: # Specify the name of the service connection with access to your fork

pool:
  name: # Specify the name of the pool of your self-hosted agents

variables:
- group: BCDevOpsFlows

jobs:
- job: Publish_To_Production
  timeoutInMinutes: 300
  variables:
    AL_PIPELINENAME: 'PublishToProduction'
    environmentsNameFilter: $(AL_PROD_ENVIRONMENTNAMESFILTER)

  steps:
  - checkout: self
    path: App
  - checkout: BCDevOpsFlows
    path: BCDevOpsFlows

  - task: PowerShell@2
    displayName: 'Initialize'
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\WorkflowInitialize\WorkflowInitialize.ps1'

  - task: PowerShell@2
    displayName: 'Read Settings'
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\ReadSettings\ReadSettings.ps1'

  - task: PowerShell@2
    displayName: 'Verify Auth Context'
    condition: succeeded()
    env:
      AL_AUTHCONTEXTS_INTERNAL: $(AL_AUTHCONTEXT)
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\VerifyAuthContext\VerifyAuthContext.ps1'
      arguments: '-environmentsNameFilter "$(environmentsNameFilter)"'
      warningPreference: 'stop'
      failOnStderr: true
      
  - task: PowerShell@2
    displayName: 'Determine Artifact Url'
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\DetermineArtifactUrl\DetermineArtifactUrl.ps1'
      warningPreference: 'continue'

  - task: PowerShell@2
    displayName: 'Run Pipeline (Build)'
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\RunPipeline\RunPipeline.ps1'
      arguments: '-artifact "$(AL_ARTIFACT)"'
      warningPreference: 'continue'
      failOnStderr: true

  - task: PowerShell@2
    displayName: 'Store App file locally'
    condition: succeeded()
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\StoreAppLocally\StoreAppLocally.ps1'
      failOnStderr: true

  - task: PowerShell@2
    displayName: 'Deploy to Cloud'
    condition: succeeded()
    env:
      AL_AUTHCONTEXTS_INTERNAL: $(AL_AUTHCONTEXT)
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\DeployToCloud\DeployToCloud.ps1'
      arguments: '-deployToEnvironmentsNameFilter "$(environmentsNameFilter)" -deploymentType "Publish"'
      warningPreference: 'continue'
      failOnStderr: true

  - task: PowerShell@2
    displayName: 'Cleanup'
    condition: always()
    inputs:
      pwsh: true
      filePath: '..\BCDevOpsFlows\PipelineCleanup\PipelineCleanup.ps1'
      failOnStderr: false
